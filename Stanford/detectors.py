from myimports import * 
import colors as col
#import add_parts as ap
path = "/home/exo/Dropbox/Stanford/LXECell_standoff/"
path2 = "/home/exo/Dropbox/Stanford/SiPM/"

green = 0xff00
blue = 0x0000ff



def ChooseDetector(setup, Choice="pmt"):
	if Choice == 'pmt':
		pmt = mesh_from_stl(path+"pmt.stl")
		pmtS = Solid(pmt, mat.quartz, data.bottom(pmt,mat.MSuprasil,mat.LXenon), data.radius_bottom(pmt, surf.fulldetect, None), data.radius_bottom(pmt, col.grey, col.white))
		setup.add_pmt(pmtS,rotation = make_rotation_matrix(np.pi,(0,0,1)), displacement = (ap.meanX,ap.meanY-((ap.thickness+0.0)/2),ap.meanZ))
	
	if Choice == 'sipm':	
		c1 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4-1 Ceramic carrier-1 Ceramic carrier-1.STL")
		c2 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_2-1 Ceramic carrier_2-1 Ceramic carrier_2-1.STL")
		c3 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_3-1 Ceramic carrier_3-1 Ceramic carrier_3-1.STL")
		c4 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_4-1 Ceramic carrier_4-1 Ceramic carrier_4-1.STL")
		c5 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2-1 Ceramic carrier_5-1 Ceramic carrier_5-1.STL")
		c6 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_2-1 Ceramic carrier_6-1 Ceramic carrier_6-1.STL")
		c7 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_3-1 Ceramic carrier_7-1 Ceramic carrier_7-1.STL")
		c8 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_4-1 Ceramic carrier_8-1 Ceramic carrier_8-1.STL")

		SUM = c1+c2+c3+c4+c5+c6+c7+c8 
		sumV = SUM.get_triangle_centers()

		steel = mesh_from_stl(path2+"LXe Assembly - Steel Carrier-1.STL")
		steelS = Solid(steel, mat.fullAbsorb, mat.LXenon, color = black)
		setup.add_solid(steelS, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))

		c1S = Solid(c1, mat.fullAbsorb, mat.LXenon, color = white)
		c2S = Solid(c2, mat.fullAbsorb, mat.LXenon, color = white)
		c3S = Solid(c3, mat.fullAbsorb, mat.LXenon, color = white)
		c4S = Solid(c4, mat.fullAbsorb, mat.LXenon, color = white)
		c5S = Solid(c5, mat.fullAbsorb, mat.LXenon, color = white)
		c6S = Solid(c6, mat.fullAbsorb, mat.LXenon, color = white)
		c7S = Solid(c7, mat.fullAbsorb, mat.LXenon, color = white)
		c8S = Solid(c8, mat.fullAbsorb, mat.LXenon, color = white)

		ap.setup.add_solid(c1S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(c2S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(c3S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(c4S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(c5S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(c6S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(c7S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(c8S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))


		s1 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_2-1 Ceramic carrier_6-1 SiPM Gold Pad (2)_6-1 Component42_2-1.STL")
		s2 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_2-1 Ceramic carrier_6-1 SiPM Gold Pad (4)_6-1 Component46_2-1.STL")
		s3 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_2-1 Ceramic carrier_6-1 SiPM Gold Pad (5)_6-1 Component48_2-1.STL")
		s4 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_3-1 Ceramic carrier_7-1 SiPM Gold Pad (2)_7-1 Component42_2-1.STL")
		s5 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_3-1 Ceramic carrier_7-1 SiPM Gold Pad (4)_7-1 Component46_2-1.STL")
		s6 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_3-1 Ceramic carrier_7-1 SiPM Gold Pad (5)_7-1 Component48_2-1.STL")
		s7 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_4-1 Ceramic carrier_8-1 SiPM Gold Pad (2)_8-1 Component42_2-1.STL")
		s8 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_4-1 Ceramic carrier_8-1 SiPM Gold Pad (4)_8-1 Component46_2-1.STL")
		s9 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2_4-1 Ceramic carrier_8-1 SiPM Gold Pad (5)_8-1 Component48_2-1.STL")
		s10 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2-1 Ceramic carrier_5-1 SiPM Gold Pad (2)_5-1 Component42_2-1.STL")
		s11 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2-1 Ceramic carrier_5-1 SiPM Gold Pad (4)_5-1 Component46_2-1.STL")
		s12 = mesh_from_stl(path2+"LXe Assembly - 3er SiPM Ceramic Carrier v2-1 Ceramic carrier_5-1 SiPM Gold Pad (5)_5-1 Component48_2-1.STL")
		s13 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_2-1 Ceramic carrier_2-1 SiPM Gold Pad (1)_2-1 Component40-1.STL")
		s14 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_2-1 Ceramic carrier_2-1 SiPM Gold Pad (2)_2-1 Component42-1.STL")
		s15 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_2-1 Ceramic carrier_2-1 SiPM Gold Pad (3)_2-1 Component44-1.STL")
		s16 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_2-1 Ceramic carrier_2-1 SiPM Gold Pad (4)_2-1 Component46-1.STL")
		s17 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_2-1 Ceramic carrier_2-1 SiPM Gold Pad (5)_2-1 Component48-1.STL")
		s18 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_2-1 Ceramic carrier_2-1 SiPM Gold Pad_2-1 Component30-1.STL")
		s19 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_3-1 Ceramic carrier_3-1 SiPM Gold Pad (1)_3-1 Component40-1.STL")
		s20 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_3-1 Ceramic carrier_3-1 SiPM Gold Pad (2)_3-1 Component42-1.STL")
		s21 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_3-1 Ceramic carrier_3-1 SiPM Gold Pad (3)_3-1 Component44-1.STL")
		s22 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_3-1 Ceramic carrier_3-1 SiPM Gold Pad (4)_3-1 Component46-1.STL")
		s23 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_3-1 Ceramic carrier_3-1 SiPM Gold Pad (5)_3-1 Component48-1.STL")
		s24 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_3-1 Ceramic carrier_3-1 SiPM Gold Pad_3-1 Component30-1.STL")
		s25 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_4-1 Ceramic carrier_4-1 SiPM Gold Pad (1)_4-1 Component40-1.STL")
		s26 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_4-1 Ceramic carrier_4-1 SiPM Gold Pad (2)_4-1 Component42-1.STL")
		s27 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_4-1 Ceramic carrier_4-1 SiPM Gold Pad (3)_4-1 Component44-1.STL")
		s28 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_4-1 Ceramic carrier_4-1 SiPM Gold Pad (4)_4-1 Component46-1.STL")
		s29 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_4-1 Ceramic carrier_4-1 SiPM Gold Pad (5)_4-1 Component48-1.STL")
		s30 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4_4-1 Ceramic carrier_4-1 SiPM Gold Pad_4-1 Component30-1.STL")
		s31 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4-1 Ceramic carrier-1 SiPM Gold Pad (1)-1 Component40-1.STL")
		s32 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4-1 Ceramic carrier-1 SiPM Gold Pad (2)-1 Component42-1.STL")
		s33 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4-1 Ceramic carrier-1 SiPM Gold Pad (3)-1 Component44-1.STL")
		s34 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4-1 Ceramic carrier-1 SiPM Gold Pad (4)-1 Component46-1.STL")
		s35 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4-1 Ceramic carrier-1 SiPM Gold Pad (5)-1 Component48-1.STL")
		s36 = mesh_from_stl(path2+"LXe Assembly - 6er SiPM Ceramic Carrier v4-1 Ceramic carrier-1 SiPM Gold Pad-1 Component30-1.STL")

		s1S = Solid(s1, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s2S = Solid(s2, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s3S = Solid(s3, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s4S = Solid(s4, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s5S = Solid(s5, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s6S = Solid(s6, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s7S = Solid(s7, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s8S = Solid(s8, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s9S = Solid(s9, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s10S = Solid(s10, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s11S = Solid(s11, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s12S = Solid(s12, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s13S = Solid(s13, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s14S = Solid(s14, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s15S = Solid(s15, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s16S = Solid(s16, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s17S = Solid(s17, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s18S = Solid(s18, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s19S = Solid(s19, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s20S = Solid(s20, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s21S = Solid(s21, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s22S = Solid(s22, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s23S = Solid(s23, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s24S = Solid(s24, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s25S = Solid(s25, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s26S = Solid(s26, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s27S = Solid(s27, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s28S = Solid(s28, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s29S = Solid(s29, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s30S = Solid(s30, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s31S = Solid(s31, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s32S = Solid(s32, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s33S = Solid(s33, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s34S = Solid(s34, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s35S = Solid(s35, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)
		s36S = Solid(s36, mat.fullAbsorb, mat.LXenon, surface = surf.fulldetect, color = gold)



		ap.setup.add_solid(s1S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s2S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s3S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s4S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s5S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s6S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s7S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s8S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s9S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s10S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s11S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s12S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s13S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s14S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s15S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s16S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s17S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s18S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s19S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s20S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s21S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s22S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s23S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s24S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s25S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s26S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s27S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s28S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s29S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s30S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s31S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s32S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s33S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s34S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s35S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))
		ap.setup.add_solid(s36S, displacement=(np.mean(ap.o_center[:,0])-np.mean(sumV[:,0]),np.mean(ap.o_center[:,1])-np.mean(sumV[:,1])-3,np.mean(ap.o_center[:,2])-np.mean(sumV[:,2])))

